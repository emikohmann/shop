{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is an API that handles the admin commands.",
        "title": "Admin API",
        "termsOfService": "https://www.linkedin.com/in/emilianokohmann/",
        "contact": {
            "name": "Emiliano Kohmann",
            "url": "https://www.linkedin.com/in/emilianokohmann/",
            "email": "emikohmann@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9999",
    "basePath": "/",
    "paths": {
        "/services": {
            "get": {
                "description": "Return the services information fetching information from the configuration and Docker.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Return the list of current services.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.ListServicesResponseHTTP"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.APIErrorHTTP"
                        }
                    }
                }
            }
        },
        "/services/{serviceID}": {
            "get": {
                "description": "Return the service information fetching information from the configuration and Docker.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Return the service information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the service to get",
                        "name": "serviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetServiceResponseHTTP"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.APIErrorHTTP"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.APIErrorHTTP"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.DockerAdditionalInfo": {
            "type": "object",
            "additionalProperties": true
        },
        "http.APIErrorHTTP": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Some information not found"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "http.GetServiceResponseHTTP": {
            "type": "object",
            "properties": {
                "additional_info": {
                    "$ref": "#/definitions/admin.DockerAdditionalInfo"
                },
                "creation_date": {
                    "type": "string",
                    "example": "2023-03-29T03:36:19Z"
                },
                "health": {
                    "type": "string",
                    "example": "HEALTHY"
                },
                "name": {
                    "type": "string",
                    "example": "Items API"
                },
                "network": {
                    "type": "string",
                    "example": "shop_default"
                },
                "port": {
                    "type": "integer",
                    "example": 8080
                },
                "status": {
                    "type": "string",
                    "example": "RUNNING"
                },
                "status_detail": {
                    "type": "string",
                    "example": "Up 2 hours"
                },
                "version": {
                    "type": "string",
                    "example": "0.0.1"
                }
            }
        },
        "http.ListServicesResponseHTTP": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.ServiceResponseHTTP"
                    }
                }
            }
        },
        "http.ServiceResponseHTTP": {
            "type": "object",
            "properties": {
                "creation_date": {
                    "type": "string",
                    "example": "2023-03-29T03:36:19Z"
                },
                "health": {
                    "type": "string",
                    "example": "HEALTHY"
                },
                "name": {
                    "type": "string",
                    "example": "Items API"
                },
                "network": {
                    "type": "string",
                    "example": "shop_default"
                },
                "port": {
                    "type": "integer",
                    "example": 8080
                },
                "status": {
                    "type": "string",
                    "example": "RUNNING"
                },
                "status_detail": {
                    "type": "string",
                    "example": "Up 2 hours"
                },
                "version": {
                    "type": "string",
                    "example": "0.0.1"
                }
            }
        }
    }
}