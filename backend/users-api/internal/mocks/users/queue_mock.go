// Code generated by mockery v2.22.1. DO NOT EDIT.

package users

import (
	apierrors "users-api/internal/apierrors"

	context "context"

	mock "github.com/stretchr/testify/mock"

	users "users-api/pkg/users"
)

// UsersQueue is an autogenerated mock type for the usersQueue type
type UsersQueue struct {
	mock.Mock
}

// PublishUserNotification provides a mock function with given fields: ctx, action, priority, id
func (_m *UsersQueue) PublishUserNotification(ctx context.Context, action users.Action, priority users.Priority, id int64) apierrors.APIError {
	ret := _m.Called(ctx, action, priority, id)

	var r0 apierrors.APIError
	if rf, ok := ret.Get(0).(func(context.Context, users.Action, users.Priority, int64) apierrors.APIError); ok {
		r0 = rf(ctx, action, priority, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apierrors.APIError)
		}
	}

	return r0
}

type mockConstructorTestingTNewUsersQueue interface {
	mock.TestingT
	Cleanup(func())
}

// NewUsersQueue creates a new instance of UsersQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUsersQueue(t mockConstructorTestingTNewUsersQueue) *UsersQueue {
	mock := &UsersQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
